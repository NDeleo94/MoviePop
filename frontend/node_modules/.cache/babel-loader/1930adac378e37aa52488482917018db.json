{"ast":null,"code":"var _jsxFileName = \"/home/ndeleo/moviepop/frontend/src/components/MovieGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getMovies } from \"../utils/getMovies\";\nimport { MovieItem } from \"./MovieItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MoviesGrid() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getMovies().then(data => {\n      setMovies(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieItem, {\n      movie: movie\n    }, movie.show.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MoviesGrid, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = MoviesGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesGrid\");","map":{"version":3,"sources":["/home/ndeleo/moviepop/frontend/src/components/MovieGrid.jsx"],"names":["useEffect","useState","getMovies","MovieItem","MoviesGrid","movies","setMovies","then","data","map","movie","show","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,SAAS,GAAGK,IAAZ,CAAkBC,IAAD,IAAU;AACzBF,MAAAA,SAAS,CAACE,IAAD,CAAT;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,sBACE;AAAA,cACGH,MAAM,CAACI,GAAP,CAAYC,KAAD,iBACV,QAAC,SAAD;AAA+B,MAAA,KAAK,EAAEA;AAAtC,OAAgBA,KAAK,CAACC,IAAN,CAAWC,EAA3B;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhBeR,U;;KAAAA,U","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getMovies } from \"../utils/getMovies\";\nimport { MovieItem } from \"./MovieItem\";\n\nexport function MoviesGrid() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getMovies().then((data) => {\n      setMovies(data);\n    });\n  }, []);\n\n  return (\n    <ul>\n      {movies.map((movie) => (\n        <MovieItem key={movie.show.id} movie={movie} />\n      ))}\n    </ul>\n  );\n}"]},"metadata":{},"sourceType":"module"}