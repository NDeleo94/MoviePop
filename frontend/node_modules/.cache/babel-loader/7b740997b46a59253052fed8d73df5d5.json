{"ast":null,"code":"var _jsxFileName = \"/home/ndeleo/moviepop/frontend/src/components/MoviesGrid.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getMovies } from \"../utils/getMovies\";\nimport { MovieItem } from \"./MovieItem\";\nimport styles from \"../components styles/MoviesGrid.module.css\";\nimport { NoResults } from \"./NoResults\";\nimport { WaitImg } from \"./WaitImg\";\nimport { useQuery } from \"../hooks/useQuery\";\nimport { useDebounce } from \"../hooks/useDebounce\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MoviesGrid() {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const query = useQuery();\n  const search = query.get(\"search\");\n  const debouncedSearch = useDebounce(search, 5000);\n  console.log(search);\n  useEffect(() => {\n    if (debouncedSearch) {\n      setIsLoading(true);\n      const searchURL = debouncedSearch ? debouncedSearch : \"star wars\";\n      getMovies(searchURL).then(data => {\n        setMovies(data);\n        setIsLoading(false);\n      });\n    }\n  }, [debouncedSearch]);\n\n  if (!isLoading && movies.length === 0) {\n    return /*#__PURE__*/_jsxDEV(NoResults, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(WaitImg, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.moviesGrid,\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieItem, {\n      movie: movie\n    }, movie.show.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MoviesGrid, \"2rxoHpQgI+5xPAO1W52h1+yxJwg=\", false, function () {\n  return [useQuery, useDebounce];\n});\n\n_c = MoviesGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesGrid\");","map":{"version":3,"sources":["/home/ndeleo/moviepop/frontend/src/components/MoviesGrid.jsx"],"names":["useEffect","useState","getMovies","MovieItem","styles","NoResults","WaitImg","useQuery","useDebounce","MoviesGrid","movies","setMovies","isLoading","setIsLoading","query","search","get","debouncedSearch","console","log","searchURL","then","data","length","moviesGrid","map","movie","show","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,MAAP,MAAmB,4CAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMa,KAAK,GAAGP,QAAQ,EAAtB;AACA,QAAMQ,MAAM,GAAGD,KAAK,CAACE,GAAN,CAAU,QAAV,CAAf;AAEA,QAAMC,eAAe,GAAGT,WAAW,CAACO,MAAD,EAAS,IAAT,CAAnC;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,eAAJ,EAAqB;AACnBJ,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,YAAMO,SAAS,GAAGH,eAAe,GAAGA,eAAH,GAAqB,WAAtD;AACAf,MAAAA,SAAS,CAACkB,SAAD,CAAT,CAAqBC,IAArB,CAA2BC,IAAD,IAAU;AAClCX,QAAAA,SAAS,CAACW,IAAD,CAAT;AACAT,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAHD;AAID;AACF,GATQ,EASN,CAACI,eAAD,CATM,CAAT;;AAWA,MAAI,CAACL,SAAD,IAAcF,MAAM,CAACa,MAAP,KAAkB,CAApC,EAAuC;AACrC,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIX,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAER,MAAM,CAACoB,UAAtB;AAAA,cACGd,MAAM,CAACe,GAAP,CAAYC,KAAD,iBACV,QAAC,SAAD;AAA+B,MAAA,KAAK,EAAEA;AAAtC,OAAgBA,KAAK,CAACC,IAAN,CAAWC,EAA3B;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GApCenB,U;UAIAF,Q,EAGUC,W;;;KAPVC,U","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getMovies } from \"../utils/getMovies\";\nimport { MovieItem } from \"./MovieItem\";\n\nimport styles from \"../components styles/MoviesGrid.module.css\";\nimport { NoResults } from \"./NoResults\";\nimport { WaitImg } from \"./WaitImg\";\nimport { useQuery } from \"../hooks/useQuery\";\nimport { useDebounce } from \"../hooks/useDebounce\";\n\nexport function MoviesGrid() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const query = useQuery();\n  const search = query.get(\"search\");\n  \n  const debouncedSearch = useDebounce(search, 5000);\n  console.log(search);\n\n  useEffect(() => {\n    if (debouncedSearch) {\n      setIsLoading(true);\n      const searchURL = debouncedSearch ? debouncedSearch : \"star wars\";\n      getMovies(searchURL).then((data) => {\n        setMovies(data);\n        setIsLoading(false);\n      });\n    }\n  }, [debouncedSearch]);\n\n  if (!isLoading && movies.length === 0) {\n    return <NoResults />;\n  }\n\n  if (isLoading) {\n    return <WaitImg />;\n  }\n\n  return (\n    <ul className={styles.moviesGrid}>\n      {movies.map((movie) => (\n        <MovieItem key={movie.show.id} movie={movie} />\n      ))}\n    </ul>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}