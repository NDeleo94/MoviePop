{"ast":null,"code":"var _jsxFileName = \"/home/ndeleo/moviepop/frontend/src/components/MoviesGrid.jsx\",\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getMovies } from \"../utils/getMovies\";\nimport { MovieItem } from \"./MovieItem\";\nimport styles from \"../components styles/MoviesGrid.module.css\";\nimport { NoResults } from \"./NoResults\";\nimport { WaitImg } from \"./WaitImg\";\nimport { useQuery } from \"../hooks/useQuery\";\nimport { useDebounce } from \"../hooks/useDebounce\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MoviesGrid() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const query = useQuery();\n  const search = query.get(\"search\");\n  console.log(search);\n\n  _s(useEffect(_s(() => {\n    _s();\n\n    const debouncedSearch = useDebounce(search, 300);\n    setIsLoading(true);\n    const searchURL = debouncedSearch ? debouncedSearch : \"star wars\";\n    getMovies(searchURL).then(data => {\n      setMovies(data);\n      setIsLoading(false);\n    });\n  }, \"lwFS3uvRX5UYLEYZVxTjmuaM7nI=\", false, function () {\n    return [useDebounce];\n  }), [debouncedSearch]), \"lwFS3uvRX5UYLEYZVxTjmuaM7nI=\", false, function () {\n    return [useDebounce];\n  });\n\n  if (!isLoading && movies.length === 0) {\n    return /*#__PURE__*/_jsxDEV(NoResults, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(WaitImg, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.moviesGrid,\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieItem, {\n      movie: movie\n    }, movie.show.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(MoviesGrid, \"dq3NNRXqxJi6UHY0CR8JvPuWxdI=\", false, function () {\n  return [useQuery];\n});\n\n_c = MoviesGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesGrid\");","map":{"version":3,"sources":["/home/ndeleo/moviepop/frontend/src/components/MoviesGrid.jsx"],"names":["useEffect","useState","getMovies","MovieItem","styles","NoResults","WaitImg","useQuery","useDebounce","MoviesGrid","movies","setMovies","isLoading","setIsLoading","query","search","get","console","log","debouncedSearch","searchURL","then","data","length","moviesGrid","map","movie","show","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,MAAP,MAAmB,4CAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,WAAT,QAA4B,sBAA5B;;AAEA,OAAO,SAASC,UAAT,GAAsB;AAAA;;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,IAAD,CAA1C;AAEA,QAAMa,KAAK,GAAGP,QAAQ,EAAtB;AACA,QAAMQ,MAAM,GAAGD,KAAK,CAACE,GAAN,CAAU,QAAV,CAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;;AAGA,KAAAf,SAAS,IAAC,MAAM;AAAA;;AACd,UAAMmB,eAAe,GAAGX,WAAW,CAACO,MAAD,EAAS,GAAT,CAAnC;AACAF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMO,SAAS,GAAGD,eAAe,GAAGA,eAAH,GAAqB,WAAtD;AACAjB,IAAAA,SAAS,CAACkB,SAAD,CAAT,CAAqBC,IAArB,CAA2BC,IAAD,IAAU;AAClCX,MAAAA,SAAS,CAACW,IAAD,CAAT;AACAT,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHD;AAID,GARQ;AAAA,YACiBL,WADjB;AAAA,MAQN,CAACW,eAAD,CARM,CAAT;AAAA,YAC0BX,WAD1B;AAAA;;AAUA,MAAI,CAACI,SAAD,IAAcF,MAAM,CAACa,MAAP,KAAkB,CAApC,EAAuC;AACrC,wBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIX,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAER,MAAM,CAACoB,UAAtB;AAAA,cACGd,MAAM,CAACe,GAAP,CAAYC,KAAD,iBACV,QAAC,SAAD;AAA+B,MAAA,KAAK,EAAEA;AAAtC,OAAgBA,KAAK,CAACC,IAAN,CAAWC,EAA3B;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;IAlCenB,U;UAIAF,Q;;;KAJAE,U","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getMovies } from \"../utils/getMovies\";\nimport { MovieItem } from \"./MovieItem\";\n\nimport styles from \"../components styles/MoviesGrid.module.css\";\nimport { NoResults } from \"./NoResults\";\nimport { WaitImg } from \"./WaitImg\";\nimport { useQuery } from \"../hooks/useQuery\";\nimport { useDebounce } from \"../hooks/useDebounce\";\n\nexport function MoviesGrid() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const query = useQuery();\n  const search = query.get(\"search\");\n  console.log(search);\n  \n\n  useEffect(() => {\n    const debouncedSearch = useDebounce(search, 300)\n    setIsLoading(true);\n    const searchURL = debouncedSearch ? debouncedSearch : \"star wars\";\n    getMovies(searchURL).then((data) => {\n      setMovies(data);\n      setIsLoading(false);\n    });\n  }, [debouncedSearch]);\n\n  if (!isLoading && movies.length === 0) {\n    return <NoResults />;\n  }\n\n  if (isLoading) {\n    return <WaitImg />;\n  }\n\n  return (\n    <ul className={styles.moviesGrid}>\n      {movies.map((movie) => (\n        <MovieItem key={movie.show.id} movie={movie} />\n      ))}\n    </ul>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}