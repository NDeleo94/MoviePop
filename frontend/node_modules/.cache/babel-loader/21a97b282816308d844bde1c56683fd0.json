{"ast":null,"code":"var _jsxFileName = \"/home/ndeleo/moviepop/frontend/src/components/MoviesGrid.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getMovies } from \"../utils/getMovies\";\nimport { MovieItem } from \"./MovieItem\";\nimport styles from \"../components styles/MoviesGrid.module.css\";\nimport { NoResults } from \"./NoResults\";\nimport { WaitImg } from \"./WaitImg\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useQuery() {\n  _s();\n\n  return new URLSearchParams(useLocation().search);\n}\n\n_s(useQuery, \"EuD9q2dZ34PfN/QO2OBhBzeMxmY=\", false, function () {\n  return [useLocation];\n});\n\nexport function MoviesGrid() {\n  _s2();\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const query = useQuery();\n  const search = query.get(\"search\");\n  console.log(search);\n  useEffect(() => {\n    setIsLoading(true);\n    const searchURL = search ? search : \"star wars\";\n    getMovies(searchURL).then(data => {\n      setMovies(data);\n      setIsLoading(false);\n    });\n  }, [search]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(WaitImg, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: styles.moviesGrid,\n    children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieItem, {\n      movie: movie\n    }, movie.show.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(MoviesGrid, \"dq3NNRXqxJi6UHY0CR8JvPuWxdI=\", false, function () {\n  return [useQuery];\n});\n\n_c = MoviesGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesGrid\");","map":{"version":3,"sources":["/home/ndeleo/moviepop/frontend/src/components/MoviesGrid.jsx"],"names":["useEffect","useState","getMovies","MovieItem","styles","NoResults","WaitImg","useLocation","useQuery","URLSearchParams","search","MoviesGrid","movies","setMovies","isLoading","setIsLoading","query","get","console","log","searchURL","then","data","moviesGrid","map","movie","show","id"],"mappings":";;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAOC,MAAP,MAAmB,4CAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,SAASC,QAAT,GAAmB;AAAA;;AACjB,SAAO,IAAIC,eAAJ,CAAoBF,WAAW,GAAGG,MAAlC,CAAP;AACD;;GAFQF,Q;UACoBD,W;;;AAG7B,OAAO,SAASI,UAAT,GAAsB;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,IAAD,CAA1C;AAED,QAAMe,KAAK,GAAGR,QAAQ,EAAtB;AACA,QAAME,MAAM,GAAGM,KAAK,CAACC,GAAN,CAAU,QAAV,CAAf;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AAECV,EAAAA,SAAS,CAAC,MAAM;AACde,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMK,SAAS,GAAGV,MAAM,GAAGA,MAAH,GAAY,WAApC;AACAR,IAAAA,SAAS,CAACkB,SAAD,CAAT,CAAqBC,IAArB,CAA2BC,IAAD,IAAU;AAClCT,MAAAA,SAAS,CAACS,IAAD,CAAT;AACAP,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAHD;AAID,GAPQ,EAON,CAACL,MAAD,CAPM,CAAT;;AASA,MAAII,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAEV,MAAM,CAACmB,UAAtB;AAAA,cACGX,MAAM,CAACY,GAAP,CAAYC,KAAD,iBACV,QAAC,SAAD;AAA+B,MAAA,KAAK,EAAEA;AAAtC,OAAgBA,KAAK,CAACC,IAAN,CAAWC,EAA3B;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;IA5BehB,U;UAIDH,Q;;;KAJCG,U","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getMovies } from \"../utils/getMovies\";\nimport { MovieItem } from \"./MovieItem\";\n\nimport styles from \"../components styles/MoviesGrid.module.css\";\nimport { NoResults } from \"./NoResults\";\nimport { WaitImg } from \"./WaitImg\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction useQuery(){\n  return new URLSearchParams(useLocation().search)\n}\n\nexport function MoviesGrid() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n const query = useQuery()\n const search = query.get(\"search\")\n console.log(search)\n\n  useEffect(() => {\n    setIsLoading(true);\n    const searchURL = search ? search : \"star wars\";\n    getMovies(searchURL).then((data) => {\n      setMovies(data);\n      setIsLoading(false);\n    });\n  }, [search]);\n\n  if (isLoading) {\n    return <WaitImg />;\n  }\n\n  return (\n    <ul className={styles.moviesGrid}>\n      {movies.map((movie) => (\n        <MovieItem key={movie.show.id} movie={movie} />\n      ))}\n    </ul>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}